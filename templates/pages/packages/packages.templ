package pages_packages

import "pkbldr/packages"
import "strconv"

// MetaTags defines meta tags.
templ MetaTags(keywords, description string) {
	<meta name="keywords" content={ keywords }/>
	<meta name="description" content={ description }/>
}

const pageSize = 250

// BodyContent defines HTML content.
templ BodyContent(filteredPackages []packages.PackageInfo, page int, nextPage string, prevPage string, statusFilter string, nameFilter string) {
	<div class="overflow-x-auto mb-12 relative">
	        <div class="flex justify-between items-center mb-4">
            <div>
                <!-- Status Filters -->
                <button class="btn" hx-get="?status=all">All</button>
                <button class="btn" hx-get="?status=built">Built</button>
                <button class="btn" hx-get="?status=stale">Stale</button>
                <button class="btn" hx-get="?status=queued">Queued</button>
                <button class="btn" hx-get="?status=building">Building</button>
                <button class="btn" hx-get="?status=missing">Missing</button>
                <button class="btn" hx-get="?status=error">Error</button>
            </div>
            <div>
                <!-- Search Box -->
                <input type="text" class="input input-bordered" placeholder="Search by Name" id="search-box"
                    hx-get="?name=" hx-trigger="input from:#search-box" hx-target="#app" hx-swap="outerHTML" value={ nameFilter } />
            </div>
        </div>
		<table class="table m-0">
			<!-- head -->
			<thead class="sticky w-full top-0 bg-base-100">
				<tr class="flex w-full justify-center items-center">
					<th class="w-1/12"></th>
					<th class="w-2/12">Name</th>
					<th class="w-1/12">Current Version</th>
					<th class="w-1/12">New Version</th>
					<th class="w-1/12">Last Build Version</th>
					<th class="w-3/12">Description</th>
					<th class="w-1/12">Architecture</th>
					<th class="w-1/12">Current Status</th>
					<th class="w-1/12">Last Build Status</th>

				</tr>
			</thead>
			<tbody>
				for count, pkg := range filteredPackages {
					if !(count < (page - 1) * pageSize || count >= page * pageSize) {
						<tr class="flex w-full justify-center items-center">
							<th class="w-1/12">{ strconv.Itoa(count + 1) }</th>
							<td class="w-2/12 break-words">{ pkg.Name }</td>
							<td class="w-1/12 break-words">{ pkg.Version }</td>
							<th class="w-1/12">{ pkg.PendingVersion }</th>
							<th class="w-1/12">{ pkg.LastBuildVersion }</th>
							<td class="w-3/12 break-words">{ pkg.Description }</td>
							<td class="w-1/12 break-words">{ pkg.Architecture }</td>
							<td class="w-1/12">{ string(pkg.Status) }</td>
							<td class="w-1/12"><a href={ templ.SafeURL("https://buildlogs.pika-os.com/" + pkg.Name + "_buildlog.log") }>{ string(pkg.LastBuildStatus) }</a></td>
						</tr>
					}
				}
			</tbody>
		</table>
		<div class="join fixed bottom-0 flex justify-center w-full items-center">
			if page > 1 {
				<button
					class="join-item btn"
					hx-get={ prevPage }
					hx-trigger="click"
					hx-target="#app"
					hx-swap="outerHTML"
				>«</button>
			} else {
				<button
					class="join-item btn btn-disabled"
				>«</button>
			}
			<button class="join-item btn">Page { strconv.Itoa(page) }</button>
			if page < (len(filteredPackages) / pageSize) + 1 {
				<button
					class="join-item btn"
					hx-get={ nextPage }
					hx-trigger="click"
					hx-target="#app"
					hx-swap="outerHTML"
				>»</button>
			} else {
				<button
					class="join-item btn btn-disabled"
				>»</button>
			}
		</div>
	</div>
}

// BodyScripts defines JavaScript code.

script BodyScripts() {
	// console.log(
	// 	"You're using Templ package to generate HTML content!",
	// 	"Edit this JavaScript code in the `./templates/pages/index.templ` file.",
	// );
}
